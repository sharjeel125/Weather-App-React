{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","weather","setWeather","useEffect","location","prompt","axios","get","then","res","newWeather","data","console","log","className","id","name","main","temp","humidity","pressure","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA6CeA,MApCf,WAAgB,IAAD,MACb,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,qBAAU,WAER,IAAIC,EAAWC,OAAO,mBAQtB,OAPAC,IAAMC,IAAN,4DAA+DH,EAA/D,yDACGI,MAAK,SAAAC,GACJ,IAAMC,EAAaD,EAAIE,KACvBT,EAAWQ,MAIR,WACLE,QAAQC,IAAI,eAGd,IAGA,sBAAKC,UAAU,OAAf,UAGE,oBAAIC,GAAG,OAAP,gBAAed,QAAf,IAAeA,OAAf,EAAeA,EAASe,OACxB,qBAAID,GAAG,OAAP,iBAAed,QAAf,IAAeA,GAAf,UAAeA,EAASgB,YAAxB,aAAe,EAAeC,KAAK,oCAAnC,OACA,qBAAIH,GAAG,OAAP,8BAAyBd,QAAzB,IAAyBA,GAAzB,UAAyBA,EAASgB,YAAlC,aAAyB,EAAeE,YACxC,qBAAIJ,GAAG,QAAP,8BAA0Bd,QAA1B,IAA0BA,GAA1B,UAA0BA,EAASgB,YAAnC,aAA0B,EAAeG,gBCvBhCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0368b127.chunk.js","sourcesContent":["\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\n\n\n\n\nfunction App() {\n  const [weather, setWeather] = useState([])\n\n  useEffect(() => {\n    \n    var location = prompt(\"Enter City Name\")\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=1d0329a9cf37be737aedaf5d50dddd68&units=metric`)\n      .then(res => {\n        const newWeather = res.data;\n        setWeather(newWeather);\n      });\n\n\n    return () => {\n      console.log(\"Unloaded\")\n    };\n  },\n    []);\n\n  return (\n    <div className=\"main\">\n    {/* <img src=\"https://images.unsplash.com/photo-1517685352821-92cf88aee5a5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1267&q=80\" class=\"img-fluid\" alt=\"...\"/> */}\n      \n      <h1 id=\"name\">{weather?.name}</h1>\n      <h1 id=\"temp\">{weather?.main?.temp}<sup>o</sup>C</h1>\n      <h1 id=\"humi\">Humidity :{weather?.main?.humidity}</h1>\n      <h1 id=\"press\">Pressure :{weather?.main?.pressure}</h1>\n      {/* <input type=\"text\" placeholder=\"Enter Your City\"/> */}\n\n    </div>\n  )\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nimport reportWebVitals from './reportWebVitals';\n\n\n  \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}